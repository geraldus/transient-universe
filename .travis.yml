# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  timeout: 1000
  directories:
  - $HOME/.stack
  - $HOME/.ghcjs
  - $HOME/.local/bin
  - $HOME/.cache

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  # Run longest jobs first.
  include:

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS="--stack-yaml stack-ghcjs.yaml"
      TAR=http://ghcjs.tolysz.org/ghc-8.0-2016-11-03-lts-7.7-9007007.tar.gz
    compiler: ": #GHCJS 7.7"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# Download and unpack the stack executable
- mkdir -p $HOME/.local/bin
- export PATH=$HOME/.local/bin:$PATH


install:

- |
  echo "Building dependencies."
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --only-dependencies
      ;;
  esac

script:
- |
  if [[ ! -f ~/.cache/0 ]]; then
    curl -L https://www.stackage.org/stack/linux-x86_64 \
      | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    stack --no-terminal --install-ghc install hsc2hs
    touch ~/.cache/0
    ./exit1
  fi
- |
  if [[ ! -f ~/.cache/1 ]]; then
    curl -L "$TAR" -o "~/$TAR"
    tar xzf "$TAR"
    stack install ghcjs*
    touch ~/.cache/1
    ./exit1
  fi
- |
  if [[ ! -f ~/.cache/2 ]]; then
    stack setup --ghc-bindist ~/$TAR
    touch ~/.cache/2
    ./exit1
  fi
- |
  stack --no-terminal test $ARGS
  stack --no-terminal haddock --no-haddock-deps $ARGS
